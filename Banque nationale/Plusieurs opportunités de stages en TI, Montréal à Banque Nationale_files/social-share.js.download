(function () {

    var selectors = {
        form: '#social-share',
        wwmSubmit: '.wwm-submit',
        email: '.wwm-email',
        wwmItems: '.social-wwm-items',
        socialShareItems: '.social-share-items'
    };

    var dataAttributes = {
        errorText: 'data-error',
        loggedInText: 'data-logged-in',
        registeredText: 'data-registered',
        approvedDomains: 'data-approved-domains',
        ajaxUrl: 'data-ajax-url',
        moduleName: 'data-module-name',
        moduleType: 'data-module-type',
        workWithMe: 'data-workwithme',
        wwmSession: 'data-wwm-session',
        wwmEmployeeId: 'data-wwm-eid',
        shareType: 'data-share-type',
        jobId: 'data-job-id',
        referUrl: 'data-share-refer-url'
    };

    var defaults = {
        errorText: 'Please enter a valid existing email address',
        loggedInText: "You are now logged in. Share using the buttons above and we'll track your referral",
        requiredText: 'This field is required',
        EmailSentText: 'An Email Has Been Sent To Your Email Address. '
    };

    var form = $(selectors.form);
    var loggedIn = false;
    if (form.length === 0) {
        return false;
    }

    var ajaxUrl = form.attr('action');

    $(function () {
        //$('.email-error').remove();
        $(selectors.email).val("");
        $(selectors.wwmSubmit).attr('disabled', 'disabled');

        var wwm = $("form[data-workwithme='True']");

        if (wwm.length) {
            var wwmConfig = wwm.data();
            $.ajax({
                url: wwmConfig.ajaxUrl,
                type: 'POST',
                data: {
                    email: "",
                    checkSession: true
                },
                success: function (data) {
                    if (data.employeeId && data.employeeId != "") {
                        $(selectors.form).attr(dataAttributes.wwmEmployeeId, data.employeeId);
                        showMessage(false);
                        updateSocialShareUrl();
                        loggedIn = true;
                    }
                },
                error: function () {
                    return false;
                }
            });
        }
    });

    $(selectors.email).on('input propertychange', function () {
        checkSubmitButton($(this));
    });

    $(document).on('keydown keypress keyup blur', selectors.email, function () {
        checkSubmitButton($(this));
    })
        .on('submit', selectors.form, function (e) {
            e.preventDefault();
        })
        .on('click', selectors.form + ' ' + selectors.wwmSubmit, function (e) {
            var email = $(this).parent().find(selectors.email).val();
            var approvedDomains = $(this).parents('form:first').attr(dataAttributes.approvedDomains);
            if (validateEmail(email, approvedDomains, $(this))) {
                e.preventDefault();
                $(selectors.submitButton).attr('disabled', 'disabled');
                $.ajax({
                    url: ajaxUrl,
                    type: 'POST',
                    data: {
                        email: email
                    },
                    error: function () {
                        $(selectors.submitButton).prop('disabled', false);
                    },
                    success: function (data) {
                        if (data.employeeId && data.employeeId != "") {
                            $(selectors.form).attr(dataAttributes.wwmEmployeeId, data.employeeId);
                            showMessage(!data.IsExisted);
                            updateSocialShareUrl();
                            loggedIn = true;
                        }
                    }
                });
            }
        })
        .on('click', '.social-share-items .email', function (e) {
            if (loggedIn && $(this).parents('form:first').attr('data-workwithme') == 'True') {
                e.preventDefault();
                var self = this;
                $.ajax({
                    url: $(self).attr("href"),
                    type: 'POST',
                    data: {},
                    success: function (data) {
                        if (data.url && data.url != "") {
                            window.location = data.url;
                        }
                    }
                });
            }
        });

    function checkSubmitButton(ele) {
        $('.email-error').remove();
        var parent = ele.parent();
        if (parent.find(selectors.email).val().replace(/ /g, '').length > 0) {
            parent.parent().find(selectors.wwmSubmit).prop('disabled', false);
        }
        else parent.parent().find(selectors.wwmSubmit).attr('disabled', 'disabled');
    }

    function showMessage(isNewRegistered) {
        $.each($('.social-share'), function () {
            if ($(this).parents('form:first').attr('data-workwithme') == 'True') {
                $(selectors.wwmItems).slideUp().attr('aria-hidden', 'true');
                var textToShow = $(selectors.form).attr(dataAttributes.registeredText);
                if (!(isNewRegistered && textToShow)) {
                    textToShow = $(selectors.form).attr(dataAttributes.loggedInText);
                }
                if (textToShow) {
                    $("<p tabindex='-1' data-wwm-logged-in='true'>" + textToShow + "</p>").insertAfter($(this).find(selectors.wwmItems));
                }
            }
        });
    }

    function updateSocialShareUrl() {
        $.each($('.social-share-items .share'), function () {
            if ($(this).parents('form:first').attr('data-workwithme') == 'True') {
                $(this).attr("href", $(this).attr(dataAttributes.referUrl) + '?eid=' + $(selectors.form).attr(dataAttributes.wwmEmployeeId)
                    + '&sst=' + $(this).attr(dataAttributes.shareType) + '&jid=' + $(this).attr(dataAttributes.jobId)
                    + '&url=' + encodeURIComponent($(this).attr("href")));
            }
        });
    }

    function validateEmail(email, domains, self) {
        var validEmail = false;
        var emailReg;
        $('.email-error').remove();

        //check email entered against selected domain list
        if (domains.length > 0) {
            emailReg = /^\s*[\w\-\+_]+(\.[\w\-\+_]+)*\@[\w\-\+_]+\.[\w\-\+_]+(\.[\w\-\+_]+)*\s*$/;
            if (emailReg.test(email) && email.length > 0) {
                var domainList = new Array();
                domainList = domains.split(",");
                $.each(domainList, function (index, value) {
                    if (email.indexOf('@' + value, email.length - ('@' + value.length)) !== -1) {
                        validEmail = true;
                        return false;
                    }
                });
            }
        }
        else if (email.length > 0) {
            emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
            validEmail = emailReg.test(email);
        }

        if (validEmail == false) {
            if ($(selectors.form).attr(dataAttributes.errorText)) {
                var errorText = $(selectors.form).attr(dataAttributes.errorText);
                if (email.length == 0) {
                    errorText = defaults.requiredText;
                }
                $("<p class='email-error' tabindex='-1'>" + errorText + "</p>").insertAfter(self.parent().find(selectors.email));
            }
        }
        return validEmail;
    }

    (function (expCharsToEscape, expEscapedSpace, expNoStart, undefined) {
        modURLParam = function (url, paramName, paramValue) {
            paramValue = paramValue != undefined
                ? encodeURIComponent(paramValue).replace(expEscapedSpace, '+')
                : paramValue;
            var pattern = new RegExp(
                '([?&]'
                + paramName.replace(expCharsToEscape, '\\$1')
                + '=)[^&]*'
            );
            if (pattern.test(url)) {
                return url.replace(
                    pattern,
                    function ($0, $1) {
                        return paramValue != undefined ? $1 + paramValue : '';
                    }
                ).replace(expNoStart, '$1?');
            }
            else if (paramValue != undefined) {
                return url + (url.indexOf('?') + 1 ? '&' : '?')
                    + paramName + '=' + paramValue;
            }
            else {
                return url;
            }
        };
    })(/([\\\/\[\]{}().*+?|^$])/g, /%20/g, /^([^?]+)&/);
})();